<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dreamteam.hola.dao.BoardMapper">
    <sql id="boardCommonColumns">
        b.board_id id,
        b.title,
        m.nickname writer,
        m.profile_image writerProfile,
        b.recruit_type,
        b.recruit_cnt,
        b.duration,
        b.progress_type,
        b.start_date
    </sql>

    <select id="findById" resultType="BoardDetailDto">
        select
        <include refid="boardCommonColumns"/>,
        b.content,
        b.reg_date,
        b.contact_type,
        b.contact,
        b.recruit_status
        from board b
        join member m on m.member_id = b.member_id
        where b.board_id = #{id}
    </select>

    <select id="findByIdAndMemberId" resultType="BoardDetailDto">
        select
        <include refid="boardCommonColumns"/>,
        b.content,
        b.reg_date,
        b.contact_type,
        b.contact,
        b.recruit_status
        from board b
        join member m on m.member_id = b.member_id
        where b.board_id = #{id} and b.member_id = #{memberId}
    </select>

    <select id="findAll" resultType="BoardListDto">
        select distinct
        <include refid="boardCommonColumns"/>,
        b.view_cnt,
        b.recruit_status
        from board b
        join member m on m.member_id = b.member_id
        join board_skill bs on b.board_id = bs.board_id
        join skill s on bs.skill_id = s.skill_id
        <where>
            <if test="skillTypes != null">(
                <foreach collection="skillTypes" item="skill" separator="or">
                    skill_type = #{skill}
                </foreach>
                )
            </if>
            <if test="recruitType != null">
                and recruit_type = #{recruitType}
            </if>
            <if test="recruitStatus != null">
                and recruit_status = #{recruitStatus}
            </if>
        </where>
    </select>

    <update id="updateViewCnt">
        update
            board
        set view_cnt = view_cnt + 1
        where board_id = #{id}
    </update>

    <insert id="save" parameterType="BoardReqDto">
        insert into board (member_id, title, content, recruit_type, recruit_cnt, progress_type, duration, contact_type, contact,
        start_date)
        values (#{memberId}, #{title}, #{content}, #{recruitType}, #{recruitCnt},#{progressType}, #{duration}, #{contactType},
        #{contact}, #{startDate})
        <selectKey keyProperty="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateRecruitStatus">
        update board
        set recruit_status=#{status}
        where board_id = #{id}
    </update>

    <update id="update" parameterType="BoardReqDto">
        update board b
        set b.title         = #{boardDto.title},
            b.content       = #{boardDto.content},
            b.recruit_type  = #{boardDto.recruitType},
            b.recruit_cnt   = #{boardDto.recruitCnt},
            b.progress_type = #{boardDto.progressType},
            b.duration      = #{boardDto.duration},
            b.start_date    = #{boardDto.startDate},
            b.contact_type  = #{boardDto.contactType},
            b.contact       = #{boardDto.contact},
            b.mod_date      = #{boardDto.modDate}
            where board_id = #{boardDto.id} and b.member_id = #{memberId};
    </update>

    <update id="calScore">
        UPDATE board
        SET score = ((DATE(reg_date)- DATE(CURRENT_TIMESTAMP)) * 0.001) + (view_cnt * 0.5) + (comment_cnt * 1.5)
        WHERE recruit_status = 'Y';
    </update>

    <select id="selectRecommendedBoard" resultType="RecommendedBoardDto">
        select board_id,title
        from board
        WHERE recruit_status = 'Y'
        order by score desc,reg_date desc
        limit 0,10;
    </select>

    <update id="updateCommentCnt">
        update board
        set comment_cnt = (
            SELECT count(comment_id)
            FROM comment
            where board.board_id = comment.board_id);
    </update>

    <select id="findAllByMemberId" resultType="BoardListDto">
        select
        <include refid="boardCommonColumns"/>,
        b.view_cnt
        from board b
        join member m on b.member_id = m.member_id
        where b.member_id = #{memberId}
    </select>
</mapper>